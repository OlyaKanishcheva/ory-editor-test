"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var TextField_1 = __importDefault(require("@material-ui/core/TextField"));
var ory_editor_ui_1 = require("ory-editor-ui");
var ThemeProvider_1 = __importStar(require("ory-editor-ui/lib/ThemeProvider"));
var ParallaxBackgroundDefaultControls = function (props) {
    var Renderer = props.Renderer, focused = props.focused, _a = props.state, _b = _a.background, background = _b === void 0 ? '' : _b, _c = _a.darken, darken = _c === void 0 ? 0.3 : _c;
    return (React.createElement(React.Fragment, null,
        React.createElement(Renderer, __assign({}, props)),
        React.createElement(ThemeProvider_1.default, { theme: ThemeProvider_1.darkTheme },
            React.createElement(ory_editor_ui_1.BottomToolbar, { open: focused, theme: ThemeProvider_1.darkTheme },
                React.createElement(TextField_1.default, { placeholder: "http://example.com/image.png", label: "Image location (URL)", style: { width: '256px' }, value: background, onChange: function (e) { return props.handleBackgroundPreviewChange(e.target.value); }, onBlur: props.commitBackground }),
                React.createElement(TextField_1.default, { placeholder: "0.3", label: "Darken level", style: { width: '256px' }, value: darken, onChange: function (e) { return props.handleDarkenPreviewChange(e.target.value); }, onBlur: props.commitDarken })))));
};
exports.default = ParallaxBackgroundDefaultControls;
//# sourceMappingURL=ParallaxBackgroundDefaultControls.js.map