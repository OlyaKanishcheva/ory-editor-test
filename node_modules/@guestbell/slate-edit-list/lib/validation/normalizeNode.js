"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("../utils");
/**
 * Create a schema definition with rules to normalize lists
 */
function normalizeNode(opts) {
    return function (node) { return joinAdjacentLists(opts, node); };
}
/**
 * A rule that joins adjacent lists of the same type
 */
function joinAdjacentLists(opts, node) {
    if (node.object !== 'document' && node.object !== 'block') {
        return undefined;
    }
    var invalids = node.nodes
        .map(function (child, i) {
        if (!utils_1.isList(opts)(child)) {
            return null;
        }
        var next = node.nodes.get(i + 1);
        if (!next ||
            !utils_1.isList(opts)(next) ||
            !opts.canMerge(child, next)) {
            return null;
        }
        return [child, next];
    })
        .filter(Boolean);
    if (invalids.isEmpty()) {
        return undefined;
    }
    /**
     * Join the list pairs
     */
    // We join in reverse order, so that multiple lists folds onto the first one
    return function (editor) {
        invalids.reverse().forEach(function (pair) {
            var _a = pair, first = _a[0], second = _a[1];
            var updatedSecond = editor.value.document.getDescendant(second.key);
            updatedSecond.nodes.forEach(function (secondNode, index) {
                editor.withoutNormalizing(function () {
                    editor.moveNodeByKey(secondNode.key, first.key, first.nodes.size + index);
                });
            });
            editor.withoutNormalizing(function () {
                editor.removeNodeByKey(second.key);
            });
        });
    };
}
exports.default = normalizeNode;
//# sourceMappingURL=normalizeNode.js.map