{"ast":null,"code":"\"use strict\";\n/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar sizing_1 = require(\"./sizing\");\n\nvar optimize_1 = require(\"./optimize\");\n\nvar level_1 = require(\"./level\");\n\nexports.decorate = function (cells) {\n  if (cells === void 0) {\n    cells = [];\n  }\n\n  return sizing_1.computeInlines(sizing_1.computeResizeable(sizing_1.computeBounds(sizing_1.computeSizes(optimize_1.optimizeCells(cells))))).map(function (cell) {\n    if (cell.rows) {\n      cell.rows = optimize_1.optimizeRows(cell.rows).map(function (r) {\n        var optimized = optimize_1.optimizeRow(r);\n\n        if (optimized.cells) {\n          optimized.cells = exports.decorate(optimized.cells);\n        }\n\n        return optimized;\n      });\n    }\n\n    return level_1.computeDropLevels(optimize_1.optimizeCell(cell));\n  });\n};","map":null,"metadata":{},"sourceType":"script"}