{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar options_1 = __importDefault(require(\"./options\"));\n\nvar handlers_1 = require(\"./handlers\");\n\nvar core_1 = __importDefault(require(\"./core\"));\n/**\r\n * A Slate plugin to handle keyboard events in lists.\r\n */\n\n\nfunction EditBlockquote(opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  var _opts = new options_1.default(opts);\n\n  var corePlugin = core_1.default(opts);\n  return __assign({}, corePlugin, {\n    onKeyDown: handlers_1.onKeyDown(_opts)\n  });\n}\n\nexports.default = EditBlockquote;","map":null,"metadata":{},"sourceType":"script"}