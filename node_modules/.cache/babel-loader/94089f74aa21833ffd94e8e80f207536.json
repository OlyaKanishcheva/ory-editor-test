{"ast":null,"code":"\"use strict\";\n/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* eslint-disable prefer-reflect */\n\nvar React = __importStar(require(\"react\"));\n\nvar FormatAlignLeft_1 = __importDefault(require(\"@material-ui/icons/FormatAlignLeft\"));\n\nvar FormatAlignCenter_1 = __importDefault(require(\"@material-ui/icons/FormatAlignCenter\"));\n\nvar FormatAlignRight_1 = __importDefault(require(\"@material-ui/icons/FormatAlignRight\"));\n\nvar FormatAlignJustify_1 = __importDefault(require(\"@material-ui/icons/FormatAlignJustify\"));\n\nvar helpers_1 = require(\"../helpers\");\n\nvar Plugin_1 = __importDefault(require(\"./Plugin\"));\n\nvar createButton = function createButton(align, icon, type) {\n  return function (_a) {\n    var editorState = _a.editorState,\n        editor = _a.editor;\n\n    var onClick = function onClick(e) {\n      e.preventDefault();\n\n      var _isActive = editorState.blocks.some(function (block) {\n        return block.data.get('align') === align;\n      });\n\n      editor.setBlocks({\n        data: {\n          align: _isActive ? null : align\n        },\n        type: type\n      });\n    };\n\n    var isActive = editorState.blocks.some(function (block) {\n      return block.data.get('align') === align;\n    });\n    return React.createElement(helpers_1.ToolbarButton, {\n      onClick: onClick,\n      isActive: isActive,\n      icon: icon\n    });\n  };\n};\n\nvar AlignmentPlugin =\n/** @class */\nfunction (_super) {\n  __extends(AlignmentPlugin, _super);\n\n  function AlignmentPlugin(props) {\n    var _this = _super.call(this) || this;\n\n    _this.name = 'alignment';\n    _this.toolbarButtons = [createButton('left', React.createElement(FormatAlignLeft_1.default, null), props.DEFAULT_NODE), createButton('center', React.createElement(FormatAlignCenter_1.default, null), props.DEFAULT_NODE), createButton('right', React.createElement(FormatAlignRight_1.default, null), props.DEFAULT_NODE), createButton('justify', React.createElement(FormatAlignJustify_1.default, null), props.DEFAULT_NODE)];\n    return _this;\n  }\n\n  return AlignmentPlugin;\n}(Plugin_1.default);\n\nexports.default = AlignmentPlugin;","map":null,"metadata":{},"sourceType":"script"}