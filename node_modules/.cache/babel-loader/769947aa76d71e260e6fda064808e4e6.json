{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar slate_1 = require(\"slate\");\n\nvar utils_1 = require(\"../utils\");\n/**\r\n * Decreases the depth of the current item. The following items will\r\n * be moved as subList of the decreased item.\r\n *\r\n * No-op for root items.\r\n */\n\n\nfunction decreaseItemDepth(opts, editor) {\n  var value = editor.value;\n  var document = value.document; // Cannot decrease item depth of root items\n\n  var depth = utils_1.getItemDepth(opts)(value);\n\n  if (depth === 1) {\n    return editor;\n  }\n\n  var currentItem = utils_1.getCurrentItem(opts)(value);\n\n  if (!currentItem) {\n    return editor;\n  }\n\n  var currentList = document.getParent(currentItem.key);\n  var parentItem = document.getParent(currentList.key);\n  var parentList = document.getParent(parentItem.key); // The items following the item will be moved to a subList of currentItem\n\n  var followingItems = currentList.nodes.skipUntil(function (i) {\n    return i === currentItem;\n  }).rest(); // True if the currentItem and the followingItems make the whole\n  // currentList, and hence the currentList will be emptied\n\n  var willEmptyCurrentList = currentList.nodes.size === followingItems.size + 1;\n\n  if (!followingItems.isEmpty()) {\n    // Add them as subList of currentItem\n    var subList_1 = slate_1.Block.create({\n      object: 'block',\n      type: currentList.type,\n      data: currentList.data\n    }); // Add the subList\n\n    editor.withoutNormalizing(function () {\n      editor.insertNodeByKey(currentItem.key, currentItem.nodes.size, subList_1);\n    });\n    editor.withoutNormalizing(function () {\n      editor.moveNodeByKey(currentItem.key, parentList.key, parentList.nodes.indexOf(parentItem) + 1);\n    }); // Move the followingItems to the subList\n\n    followingItems.forEach(function (item, index) {\n      editor.withoutNormalizing(function () {\n        editor.moveNodeByKey(item.key, subList_1.key, subList_1.nodes.size + index);\n      });\n    });\n  } else {\n    editor.moveNodeByKey(currentItem.key, parentList.key, parentList.nodes.indexOf(parentItem) + 1);\n  } // Remove the currentList completely if needed\n\n\n  if (willEmptyCurrentList) {\n    editor.removeNodeByKey(currentList.key);\n  }\n\n  return editor;\n}\n\nexports.default = decreaseItemDepth;","map":null,"metadata":{},"sourceType":"script"}