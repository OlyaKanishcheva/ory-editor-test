{"ast":null,"code":"\"use strict\";\n/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar equals_1 = __importDefault(require(\"ramda/src/equals\"));\n\nexports.shouldPureComponentUpdate = function (next) {\n  var _this = this;\n\n  var filterFunctions = function filterFunctions(o) {\n    return function (key) {\n      return typeof o[key] !== 'function';\n    };\n  };\n\n  var prevKeys = Object.keys(next).filter(filterFunctions(next)); // eslint-disable-next-line no-invalid-this\n\n  var nextKeys = Object.keys(this.props).filter(filterFunctions(this.props));\n\n  if (!equals_1.default(nextKeys, prevKeys)) {\n    // console.log('Keys are mismatching', nextKeys, prevKeys)\n    return true;\n  } // eslint-disable-next-line no-invalid-this\n\n\n  var changed = nextKeys.filter(function (key) {\n    return !equals_1.default(next[key], _this.props[key]);\n  }); // if (changed.length > 0) {\n  //   console.log('There have been at least one changed fields: ', changed.map((c) => ({\n  //     key: c,\n  //     now: this.props[c],\n  //     next: next[c]\n  //   })))\n  // } else {\n  //   console.log('No changes deteced, skipping render.')\n  // }\n\n  return changed.length > 0;\n};","map":null,"metadata":{},"sourceType":"script"}