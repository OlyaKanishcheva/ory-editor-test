{"ast":null,"code":"\"use strict\";\n/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = require(\"react\");\n\nvar react_redux_1 = require(\"react-redux\");\n\nvar reselect_1 = require(\"reselect\");\n\nvar pathOr_1 = __importDefault(require(\"ramda/src/pathOr\"));\n\nvar mousetrap_1 = __importDefault(require(\"mousetrap\"));\n\nvar undo_1 = require(\"../../actions/undo\");\n\nvar cell_1 = require(\"../../actions/cell\");\n\nvar display_1 = require(\"../../selector/display\");\n\nvar focus_1 = require(\"../../selector/focus\");\n\nvar editable_1 = require(\"../../selector/editable\");\n\nvar hotKeyHandler = function hotKeyHandler(n, key) {\n  return pathOr_1.default(pathOr_1.default(function () {\n    return Promise.resolve();\n  }, ['content', 'plugin', key], n), ['layout', 'plugin', key], n);\n};\n\nvar nextLeaf = function nextLeaf(order, current) {\n  if (order === void 0) {\n    order = [];\n  }\n\n  var last;\n  return order.find(function (c) {\n    if (last === current) {\n      return c.isLeaf;\n    }\n\n    last = c.id;\n    return false;\n  });\n};\n\nvar previousLeaf = function previousLeaf(order, current) {\n  return nextLeaf(order.slice().reverse(), current);\n};\n\nvar falser = function falser(err) {\n  if (err) {\n    // tslint:disable-next-line:no-console\n    console.log(err);\n  }\n};\n\nif (mousetrap_1.default && mousetrap_1.default.prototype) {\n  mousetrap_1.default.prototype.stopCallback = function () {\n    return false;\n  };\n}\n\nvar wasInitialized = false;\n\nvar Decorator =\n/** @class */\nfunction (_super) {\n  __extends(Decorator, _super);\n\n  function Decorator() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.handlers = {\n      undo: function undo() {\n        var id = _this.props.id;\n\n        _this.props.undo(id);\n      },\n      redo: function redo() {\n        var id = _this.props.id;\n\n        _this.props.redo(id);\n      },\n      // remove cells\n      remove: function remove(e) {\n        if (!_this.props.isEditMode) {\n          return;\n        }\n\n        var maybeNode = _this.props.searchNodeEverywhere(_this.props.focus);\n\n        if (!maybeNode) {\n          return;\n        }\n\n        var n = maybeNode.node;\n        hotKeyHandler(n, 'handleRemoveHotKey')(e, n).then(function () {\n          return _this.props.removeCell(_this.props.focus);\n        }).catch(falser);\n      },\n      // focus next cell\n      focusNext: function focusNext(e) {\n        if (!_this.props.isEditMode) {\n          return;\n        }\n\n        var n = _this.props.searchNodeEverywhere(_this.props.focus).node;\n\n        hotKeyHandler(n, 'handleFocusNextHotKey')(e, n).then(function () {\n          var found = nextLeaf(_this.props.editable.cellOrder, _this.props.focus);\n\n          if (found) {\n            _this.props.blurAllCells();\n\n            _this.props.focusCell(found.id);\n          }\n        }).catch(falser);\n      },\n      // focus previous cell\n      focusPrev: function focusPrev(e) {\n        if (!_this.props.isEditMode) {\n          return;\n        }\n\n        var n = _this.props.searchNodeEverywhere(_this.props.focus).node;\n\n        hotKeyHandler(n, 'handleFocusPreviousHotKey')(e, n).then(function () {\n          var found = previousLeaf(_this.props.editable.cellOrder, _this.props.focus);\n\n          if (found) {\n            _this.props.blurAllCells();\n\n            _this.props.focusCell(found.id);\n          }\n        }).catch(falser);\n      }\n    };\n    return _this;\n  }\n\n  Decorator.prototype.componentDidMount = function () {\n    if (!wasInitialized) {\n      if (!mousetrap_1.default) {\n        return;\n      }\n\n      mousetrap_1.default.bind(['ctrl+z', 'command+z'], this.handlers.undo);\n      mousetrap_1.default.bind(['ctrl+shift+z', 'ctrl+y', 'command+shift+z', 'command+y'], this.handlers.redo);\n      mousetrap_1.default.bind(['del', 'backspace'], this.handlers.remove);\n      mousetrap_1.default.bind(['down', 'right'], this.handlers.focusNext);\n      mousetrap_1.default.bind(['up', 'left'], this.handlers.focusPrev);\n      wasInitialized = true;\n    }\n  };\n\n  Decorator.prototype.render = function () {\n    var children = this.props.children;\n    return children;\n  };\n\n  return Decorator;\n}(react_1.Component);\n\nvar mapStateToProps = reselect_1.createStructuredSelector({\n  isEditMode: display_1.isEditMode,\n  focus: focus_1.focus,\n  // tslint:disable-next-line:no-any\n  node: function node(state) {\n    return function (id, _editable) {\n      return editable_1.node(state, {\n        id: id,\n        editable: _editable\n      });\n    };\n  },\n  searchNodeEverywhere: function searchNodeEverywhere(state) {\n    return function (id) {\n      return editable_1.searchNodeEverywhere(state, id);\n    };\n  },\n  // tslint:disable-next-line:no-any\n  editable: function editable(state, props) {\n    return function (id) {\n      return editable_1.editable(state, id ? {\n        id: id\n      } : props);\n    };\n  },\n  editables: editable_1.editables\n});\nvar mapDispatchToProps = {\n  undo: undo_1.undo,\n  redo: undo_1.redo,\n  removeCell: cell_1.removeCell,\n  focusCell: function focusCell(id) {\n    return cell_1.focusCell(id)();\n  },\n  blurAllCells: cell_1.blurAllCells\n};\nexports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(Decorator);","map":null,"metadata":{},"sourceType":"script"}