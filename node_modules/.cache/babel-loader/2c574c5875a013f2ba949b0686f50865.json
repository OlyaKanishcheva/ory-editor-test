{"ast":null,"code":"\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\n\nvar React = __importStar(require(\"react\"));\n\nvar Devices_1 = __importDefault(require(\"@material-ui/icons/Devices\"));\n\nvar react_redux_1 = require(\"react-redux\");\n\nvar display_1 = require(\"ory-editor-core/lib/actions/display\");\n\nvar display_2 = require(\"ory-editor-core/lib/selector/display\");\n\nvar reselect_1 = require(\"reselect\");\n\nvar index_1 = __importDefault(require(\"../Button/index\"));\n\nvar Inner = function Inner(props) {\n  return React.createElement(index_1.default, {\n    icon: React.createElement(Devices_1.default, null),\n    description: \"Preview result\",\n    active: props.isPreviewMode,\n    onClick: props.previewMode\n  });\n};\n\nvar mapStateToProps = reselect_1.createStructuredSelector({\n  isPreviewMode: display_2.isPreviewMode\n});\nvar mapDispatchToProps = {\n  previewMode: display_1.previewMode\n};\nexports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(Inner);","map":null,"metadata":{},"sourceType":"script"}