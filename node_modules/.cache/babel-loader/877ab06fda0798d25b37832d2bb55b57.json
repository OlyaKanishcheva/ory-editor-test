{"ast":null,"code":"\"use strict\";\n/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SET_DISPLAY_MODE = 'SET_DISPLAY_MODE';\nexports.SET_PREVIOUS_DISPLAY_MODE = 'SET_PREVIOUS_DISPLAY_MODE';\nexports.DISPLAY_MODE_PREVIEW = 'preview';\nexports.DISPLAY_MODE_LAYOUT = 'layout';\nexports.DISPLAY_MODE_EDIT = 'edit';\nexports.DISPLAY_MODE_INSERT = 'insert';\nexports.DISPLAY_MODE_RESIZING = 'resizing';\nexports.DEFAULT_DISPLAY_MODE = exports.DISPLAY_MODE_PREVIEW;\n\nvar setDisplayMode = function setDisplayMode(mode, remember) {\n  if (remember === void 0) {\n    remember = false;\n  }\n\n  return function () {\n    return {\n      type: exports.SET_DISPLAY_MODE,\n      ts: new Date(),\n      mode: mode,\n      remember: remember\n    };\n  };\n};\n/**\n * Dispatch to switch to insert display mode.\n */\n\n\nexports.insertMode = setDisplayMode(exports.DISPLAY_MODE_INSERT);\n/**\n * Dispatch to switch to edit display mode.\n */\n\nexports.editMode = setDisplayMode(exports.DISPLAY_MODE_EDIT);\n/**\n * Dispatch to switch to preview display mode.\n */\n\nexports.previewMode = setDisplayMode(exports.DISPLAY_MODE_PREVIEW);\n/**\n * Dispatch to switch to layout display mode.\n */\n\nexports.layoutMode = setDisplayMode(exports.DISPLAY_MODE_LAYOUT);\n/**\n * Dispatch to switch to resize display mode.\n */\n\nexports.resizeMode = setDisplayMode(exports.DISPLAY_MODE_RESIZING);\n/**\n * Dispatch to switch to the last display mode, or the fallback if reverting is not possible.\n */\n\nexports.previousMode = function (fallback) {\n  return {\n    type: exports.SET_PREVIOUS_DISPLAY_MODE,\n    fallback: fallback\n  };\n};","map":null,"metadata":{},"sourceType":"script"}