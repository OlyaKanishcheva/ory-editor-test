{"ast":null,"code":"\"use strict\";\n/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* eslint-disable no-alert, prefer-reflect, default-case, react/display-name */\n\nvar Link_1 = __importDefault(require(\"@material-ui/icons/Link\"));\n\nvar React = __importStar(require(\"react\"));\n\nvar TextField_1 = __importDefault(require(\"@material-ui/core/TextField\"));\n\nvar helpers_1 = require(\"../../helpers\");\n\nvar Plugin_1 = __importDefault(require(\"../Plugin\"));\n\nvar node_1 = __importDefault(require(\"./node\"));\n\nvar Dialog_1 = __importDefault(require(\"@material-ui/core/Dialog\"));\n\nvar DialogTitle_1 = __importDefault(require(\"@material-ui/core/DialogTitle\"));\n\nvar DialogContent_1 = __importDefault(require(\"@material-ui/core/DialogContent\"));\n\nvar DialogActions_1 = __importDefault(require(\"@material-ui/core/DialogActions\"));\n\nvar Button_1 = __importDefault(require(\"@material-ui/core/Button\"));\n\nvar slate_1 = require(\"slate\");\n\nvar ory_editor_ui_1 = require(\"ory-editor-ui\");\n\nexports.A = 'LINK/LINK';\n\nvar LinkButton =\n/** @class */\nfunction (_super) {\n  __extends(LinkButton, _super);\n\n  function LinkButton() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      open: false,\n      href: '',\n      title: '',\n      hadLinks: false,\n      wasExpanded: false\n    };\n\n    _this.onRef = function (component) {\n      if (!component && true) {\n        return null;\n      }\n\n      var e = component.querySelector('input');\n\n      if (e) {\n        e.focus();\n      }\n    };\n\n    _this.onClick = function (e) {\n      var _a = _this.props,\n          editorState = _a.editorState,\n          editor = _a.editor;\n      e.preventDefault();\n      var hasLinks = editorState.inlines.some(function (inline) {\n        return inline.type === exports.A;\n      });\n\n      if (hasLinks) {\n        editor.unwrapInline(exports.A);\n      } else if (editorState.selection.isExpanded) {\n        _this.setState({\n          open: true,\n          wasExpanded: editorState.selection.isExpanded,\n          href: '',\n          title: '',\n          hadLinks: hasLinks\n        });\n      } else {\n        _this.setState({\n          open: true,\n          wasExpanded: editorState.selection.isExpanded,\n          href: '',\n          title: '',\n          hadLinks: hasLinks\n        });\n      }\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n\n      _this.props.editor.focus();\n    };\n\n    _this.handleSubmit = function () {\n      _this.setState({\n        open: false\n      });\n\n      if (!_this.state.href) {\n        _this.handleClose();\n\n        return;\n      }\n\n      if (_this.state.wasExpanded) {\n        _this.props.editor.focus().wrapInline({\n          type: exports.A,\n          data: {\n            href: _this.state.href\n          }\n        }).moveToEnd();\n\n        return;\n      }\n\n      if (!_this.state.title) {\n        _this.handleClose();\n\n        return;\n      }\n\n      _this.props.editor.insertText(_this.state.title).moveFocusBackward(_this.state.title.length).wrapInline({\n        type: exports.A,\n        data: {\n          href: _this.state.href\n        }\n      }).moveToEnd().focus();\n    };\n\n    _this.onHrefChange = function (e) {\n      _this.setState({\n        href: e.target.value\n      });\n    };\n\n    _this.onTitleChange = function (e) {\n      _this.setState({\n        title: e.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  LinkButton.prototype.render = function () {\n    var actions = React.createElement(React.Fragment, null, React.createElement(Button_1.default, {\n      variant: \"text\",\n      color: \"primary\",\n      onClick: this.handleClose\n    }, \"Cancel\"), React.createElement(Button_1.default, {\n      variant: \"text\",\n      color: \"primary\",\n      onClick: this.handleSubmit\n    }, \"Ok\"));\n    var editorState = this.props.editorState;\n    var hasLinks = editorState.inlines.some(function (inline) {\n      return inline.type === exports.A;\n    });\n    return React.createElement(ory_editor_ui_1.ThemeProvider, null, React.createElement(\"span\", null, React.createElement(helpers_1.ToolbarButton, {\n      onClick: this.onClick,\n      isActive: hasLinks,\n      icon: React.createElement(Link_1.default, null)\n    }), React.createElement(\"span\", null, React.createElement(Dialog_1.default, {\n      className: \"ory-prevent-blur\",\n      title: \"Create a link\",\n      // modal={false}\n      open: this.state.open\n    }, React.createElement(DialogTitle_1.default, {\n      id: \"confirmation-dialog-title\"\n    }, \"Create a link\"), React.createElement(DialogContent_1.default, null, this.state.wasExpanded ? null : React.createElement(\"div\", null, React.createElement(TextField_1.default, {\n      placeholder: \"Link title\",\n      onChange: this.onTitleChange,\n      value: this.state.title\n    })), React.createElement(\"div\", {\n      ref: this.onRef\n    }, React.createElement(TextField_1.default, {\n      placeholder: \"http://example.com/my/link.html\",\n      onChange: this.onHrefChange,\n      value: this.state.href\n    }))), React.createElement(DialogActions_1.default, null, actions)))));\n  };\n\n  return LinkButton;\n}(React.Component);\n\nvar LinkPlugin =\n/** @class */\nfunction (_super) {\n  __extends(LinkPlugin, _super);\n\n  function LinkPlugin() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.name = 'link';\n    /*schema = {\n      nodes: { [A]: Link },\n    };*/\n\n    _this.hoverButtons = [LinkButton];\n    _this.toolbarButtons = [LinkButton];\n\n    _this.deserialize = function (el, next) {\n      switch (el.tagName.toLowerCase()) {\n        case 'a':\n          return {\n            object: 'inline',\n            type: exports.A,\n            nodes: next(el.childNodes),\n            data: slate_1.Data.create({\n              href: (el.attrs.find(function (_a) {\n                var name = _a.name;\n                return name === 'href';\n              }) || {\n                value: ''\n              }).value\n            })\n          };\n\n        default:\n          return;\n      }\n    };\n\n    _this.serialize = function ( // tslint:disable-next-line:no-any\n    object, // tslint:disable-next-line:no-any\n    children) {\n      if (object.object !== 'inline') {\n        return;\n      }\n\n      switch (object.type) {\n        case exports.A:\n          return React.createElement(\"a\", {\n            href: object.data.get('href')\n          }, children);\n\n        default:\n          return;\n      }\n    };\n\n    _this.renderNode = function (props, editor, next) {\n      switch (props.node.type) {\n        case exports.A:\n          {\n            return React.createElement(node_1.default, __assign({}, props));\n          }\n\n        default:\n          return next();\n      }\n    };\n\n    return _this;\n  }\n\n  return LinkPlugin;\n}(Plugin_1.default);\n\nexports.default = LinkPlugin;","map":null,"metadata":{},"sourceType":"script"}