{"ast":null,"code":"\"use strict\";\n/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar styles_1 = require(\"@material-ui/core/styles\");\n\nvar React = __importStar(require(\"react\"));\n\nvar react_portal_1 = require(\"react-portal\");\n\nvar is_hotkey_1 = __importDefault(require(\"is-hotkey\"));\n\nvar slate_react_1 = require(\"slate-react\");\n\nvar ory_editor_ui_1 = require(\"ory-editor-ui\");\n\nvar const_1 = require(\"../const\");\n\nvar lodash_debounce_1 = __importDefault(require(\"lodash.debounce\"));\n\nvar hooks_1 = require(\"../hooks\");\n\nvar theme = styles_1.createMuiTheme({\n  palette: {\n    type: 'dark'\n  },\n  typography: {\n    useNextVariants: true\n  }\n});\n\nvar Slate =\n/** @class */\nfunction (_super) {\n  __extends(Slate, _super);\n\n  function Slate(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.componentDidMount = function () {\n      _this.updateToolbar();\n    };\n\n    _this.flushState = function () {\n      if (_this.state.editorState) {\n        _this.props.onChange({\n          editorState: _this.state.editorState\n        });\n      }\n    };\n\n    _this.onStateChange = function (_a) {\n      var value = _a.value;\n\n      _this.setState({\n        editorState: value\n      }, function () {\n        _this.updateToolbar();\n      });\n\n      _this.flushStateDebounced();\n    };\n\n    _this.updateToolbar = function () {\n      var editorState = _this.getState();\n\n      var toolbar = _this.toolbar.current;\n\n      if (!toolbar || editorState.selection.isBlurred || editorState.selection.isCollapsed) {\n        return;\n      }\n\n      var s = window.getSelection();\n      var oRange = s.getRangeAt(0); // get the text range\n\n      var oRect = oRange.getBoundingClientRect();\n\n      if (oRect) {\n        var left = oRect.left,\n            top_1 = oRect.top,\n            width = oRect.width;\n        toolbar.style.opacity = '1';\n        toolbar.style.top = top_1 + window.scrollY - toolbar.offsetHeight + \"px\";\n        toolbar.style.left = left + window.scrollX - toolbar.offsetWidth / 2 + width / 2 + \"px\";\n      }\n    };\n\n    _this.onPaste = function (e, editor, next) {\n      var transfer = slate_react_1.getEventTransfer(e);\n\n      if (transfer.type !== 'html') {\n        return next();\n      } // tslint:disable-next-line:no-any\n\n\n      var document = hooks_1.html.deserialize(transfer.html).document;\n      return editor.insertFragment(document);\n    };\n\n    _this.onKeyDown = function (e, editor, next) {\n      // we need to prevent slate from handling undo and redo\n      if (is_hotkey_1.default(['mod+z', 'mod+y'], e)) {\n        _this.setState({\n          editorState: undefined\n        });\n\n        return true;\n      }\n\n      if (is_hotkey_1.default('shift+enter', e)) {\n        e.preventDefault();\n        editor.insertText('\\n');\n        return true;\n      }\n\n      return next();\n    };\n\n    _this.state = {};\n    _this.editor = React.createRef();\n    _this.toolbar = React.createRef();\n    _this.flushStateDebounced = lodash_debounce_1.default(_this.flushState, 1000, {\n      leading: true,\n      trailing: true,\n      maxWait: 10000\n    });\n    return _this;\n  }\n\n  Slate.prototype.getState = function () {\n    return this.state.editorState !== undefined ? this.state.editorState : this.props.state.editorState;\n  };\n\n  Slate.prototype.render = function () {\n    var _a = this.props,\n        focused = _a.focused,\n        readOnly = _a.readOnly,\n        plugins = _a.plugins,\n        HoverButtons = _a.HoverButtons,\n        ToolbarButtons = _a.ToolbarButtons;\n    var editorState = this.getState();\n    var isOpened = editorState.selection.isExpanded && editorState.selection.isFocused;\n    return React.createElement(\"div\", null, focused && React.createElement(react_portal_1.Portal, null, React.createElement(ory_editor_ui_1.ThemeProvider, {\n      theme: theme\n    }, React.createElement(\"div\", {\n      className: 'ory-prevent-blur ory-plugins-content-slate-inline-toolbar ' + (isOpened ? '' : 'ory-plugins-content-slate-inline-toolbar--hidden'),\n      style: {\n        padding: 0\n      },\n      ref: this.toolbar\n    }, React.createElement(HoverButtons, {\n      editorState: editorState,\n      editor: this.editor.current\n    })))), React.createElement(slate_react_1.Editor, {\n      ref: this.editor,\n      onChange: this.onStateChange,\n      onKeyDown: this.onKeyDown,\n      readOnly: Boolean(readOnly),\n      className: \"ory-plugins-content-slate-container\",\n      // onBlur={this.onBlur}\n      // onFocus={this.onFocus}\n      value: editorState,\n      plugins: plugins,\n      onPaste: this.onPaste,\n      placeholder: const_1.placeholder\n    }), readOnly ? null : React.createElement(ory_editor_ui_1.BottomToolbar, {\n      open: focused\n    }, React.createElement(ToolbarButtons, {\n      editor: this.editor.current,\n      editorState: editorState\n    })));\n  };\n\n  return Slate;\n}(React.Component);\n\nexports.default = Slate;","map":null,"metadata":{},"sourceType":"script"}