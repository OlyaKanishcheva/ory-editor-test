{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar slate_1 = require(\"slate\");\n\nvar utils_1 = require(\"../utils\");\n/**\r\n * Increase the depth of the current item by putting it in a sub-list\r\n * of previous item.\r\n * For first items in a list, does nothing.\r\n */\n\n\nfunction increaseItemDepth(opts, editor) {\n  var previousItem = utils_1.getPreviousItem(opts)(editor.value);\n  var currentItem = utils_1.getCurrentItem(opts)(editor.value);\n\n  if (!previousItem) {\n    return editor;\n  }\n\n  if (!currentItem) {\n    return editor;\n  } // Move the item in the subList of previous item\n\n\n  return moveAsSubItem(opts, editor, currentItem, previousItem.key);\n}\n/**\r\n * Move the given item to the subList at the end of destination item,\r\n * creating a subList if needed.\r\n */\n\n\nfunction moveAsSubItem(opts, editor, // The list item to add\nitem, // The key of the destination node\ndestKey) {\n  var destination = editor.value.document.getDescendant(destKey);\n  var lastIndex = destination.nodes.size;\n  var lastChild = destination.nodes.last(); // The potential existing last child list\n\n  var existingList = utils_1.isList(opts)(lastChild) ? lastChild : null;\n\n  if (existingList) {\n    return editor.moveNodeByKey(item.key, existingList.key, existingList.nodes.size // as last item\n    );\n  }\n\n  var currentList = utils_1.getListForItem(opts)(editor.value, destination);\n\n  if (!currentList) {\n    throw new Error('Destination is not in a list');\n  }\n\n  var newSubList = slate_1.Block.create({\n    object: 'block',\n    type: currentList.type,\n    data: currentList.data\n  });\n  newSubList.validate(editor);\n  return editor.withoutNormalizing(function () {\n    editor.insertNodeByKey(destKey, lastIndex, newSubList);\n    editor.moveNodeByKey(item.key, newSubList.key, 0);\n  });\n}\n\nexports.default = increaseItemDepth;","map":null,"metadata":{},"sourceType":"script"}