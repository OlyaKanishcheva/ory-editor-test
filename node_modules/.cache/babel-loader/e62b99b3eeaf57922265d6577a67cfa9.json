{"ast":null,"code":"\"use strict\";\n/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = __importStar(require(\"react\"));\n\nvar uuid_1 = require(\"uuid\");\n\nvar CropLandscape_1 = __importDefault(require(\"@material-ui/icons/CropLandscape\"));\n\nvar Component_1 = __importDefault(require(\"./Component\"));\n\nif (process.env.NODE_ENV !== 'production') {\n  console.warn( // tslint:disable-next-line:max-line-length\n  'WARNING! Obsolete plugin loaded. \\'ory/editor/core/layout/parallax-background\\' has been deprecated, please use the new \\'ory/editor/core/layout/background\\' plugin instead! Make sure to migrate your state manually by changing the plugin name before you switch.');\n}\n\nvar createPlugin = function createPlugin(settings) {\n  return {\n    Component: function Component(props) {\n      return React.createElement(Component_1.default, __assign({}, props, settings));\n    },\n    name: 'ory/editor/core/layout/parallax-background',\n    version: '0.0.1',\n    text: 'Parallax Background (deprecated)',\n    IconComponent: React.createElement(CropLandscape_1.default, null),\n    createInitialChildren: function createInitialChildren() {\n      return {\n        id: uuid_1.v4(),\n        rows: [{\n          id: uuid_1.v4(),\n          cells: [{\n            content: {\n              plugin: settings.defaultPlugin,\n              state: settings.defaultPlugin.createInitialState()\n            },\n            id: uuid_1.v4()\n          }]\n        }]\n      };\n    },\n    handleFocusNextHotKey: function handleFocusNextHotKey() {\n      return Promise.reject();\n    },\n    handleFocusPreviousHotKey: function handleFocusPreviousHotKey() {\n      return Promise.reject();\n    }\n  };\n};\n\nexports.default = createPlugin;","map":null,"metadata":{},"sourceType":"script"}