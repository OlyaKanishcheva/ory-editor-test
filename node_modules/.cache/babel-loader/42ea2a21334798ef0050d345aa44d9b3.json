{"ast":null,"code":"\"use strict\";\n/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = __importStar(require(\"react\"));\n\nvar react_redux_1 = require(\"react-redux\");\n\nvar classnames_1 = __importDefault(require(\"classnames\"));\n\nvar redux_1 = require(\"redux\");\n\nvar reselect_1 = require(\"reselect\");\n\nvar Inner_1 = __importDefault(require(\"./Inner\"));\n\nvar editable_1 = require(\"../../selector/editable\");\n\nvar display_1 = require(\"../../selector/display\");\n\nvar cell_1 = require(\"../../actions/cell\");\n\nvar Resizable_1 = __importDefault(require(\"./Resizable\"));\n\nvar gridClass = function gridClass(_a) {\n  var size = _a.node.size,\n      rest = __rest(_a, [\"node\"]);\n\n  if (rest.isPreviewMode || rest.isEditMode) {\n    return \"ory-cell-\" + (rest.isPreviewMode || rest.isEditMode ? 'sm' : 'xs') + \"-\" + (size || 12) + \" ory-cell-xs-12\";\n  }\n\n  return \"ory-cell-xs-\" + (size || 12);\n};\n\nvar stopClick = function stopClick(_isEditMode) {\n  return function (e) {\n    return _isEditMode ? e.stopPropagation() : null;\n  };\n};\n\nvar Cell =\n/** @class */\nfunction (_super) {\n  __extends(Cell, _super);\n\n  function Cell() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Cell.prototype.render = function () {\n    var _a;\n\n    var _b = this.props,\n        id = _b.id,\n        rowWidth = _b.rowWidth,\n        rowHeight = _b.rowHeight,\n        updateDimensions = _b.updateDimensions,\n        _c = _b.node,\n        inline = _c.inline,\n        resizable = _c.resizable,\n        hasInlineNeighbour = _c.hasInlineNeighbour,\n        focused = _c.focused;\n    return React.createElement(\"div\", {\n      className: classnames_1.default('ory-cell', gridClass(this.props), (_a = {\n        'ory-cell-has-inline-neighbour': hasInlineNeighbour\n      }, _a[\"ory-cell-inline-\" + (inline || '')] = inline, _a['ory-cell-focused'] = focused, _a['ory-cell-resizing-overlay'] = this.props.isResizeMode, _a['ory-cell-bring-to-front'] = !this.props.isResizeMode && !this.props.isLayoutMode && inline, _a)),\n      onClick: stopClick(this.props.isEditMode)\n    }, resizable && this.props.isResizeMode ? React.createElement(Resizable_1.default, __assign({}, this.props, {\n      id: id,\n      rowWidth: rowWidth,\n      rowHeight: rowHeight,\n      updateDimensions: updateDimensions,\n      node: this.props.node,\n      steps: 12,\n      onChange: this.props.resizeCell\n    }), React.createElement(Inner_1.default, __assign({}, this.props, {\n      styles: null\n    }))) : React.createElement(Inner_1.default, __assign({}, this.props, {\n      styles: null\n    })));\n  };\n\n  return Cell;\n}(React.PureComponent);\n\nvar mapStateToProps = reselect_1.createStructuredSelector({\n  isPreviewMode: display_1.isPreviewMode,\n  isEditMode: display_1.isEditMode,\n  isResizeMode: display_1.isResizeMode,\n  // required by sub-components\n  isInsertMode: display_1.isInsertMode,\n  isLayoutMode: display_1.isLayoutMode,\n  config: editable_1.editableConfig,\n  node: editable_1.purifiedNode,\n  rawNode: function rawNode(state, props) {\n    return function () {\n      return editable_1.node(state, props);\n    };\n  }\n});\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, _a) {\n  var id = _a.id;\n  return redux_1.bindActionCreators({\n    resizeCell: cell_1.resizeCell(id),\n    focusCell: cell_1.focusCell(id),\n    blurAllCells: cell_1.blurAllCells\n  }, dispatch);\n};\n\nexports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(Cell);","map":null,"metadata":{},"sourceType":"script"}