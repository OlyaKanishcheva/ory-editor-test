{"ast":null,"code":"\"use strict\";\n/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar instantiated = 0; // We need to stop some events from bubbling up, so we go up the tree from\n// the event source and check if one of the parents is the root editor node.\n// If not, we blur all cells because the editor lost focus.\n\nvar blurAll = function blurAll(blurAllCells) {\n  return function (e) {\n    var c = e.target;\n\n    if (c instanceof HTMLElement) {\n      if (c.classList.contains('ory-prevent-blur')) {\n        return;\n      }\n\n      while (c = c.parentElement) {\n        if (c.classList.contains('ory-prevent-blur')) {\n          return;\n        }\n      }\n\n      blurAllCells();\n    }\n  };\n};\n\nexports.enableGlobalBlurring = function (blurAllCells) {\n  if (instantiated === 0 && document && document.body) {\n    document.body.addEventListener('mousedown', blurAll(blurAllCells));\n    instantiated = 1;\n    return blurAll(blurAllCells);\n  }\n\n  if (instantiated > 0) {\n    instantiated += 1;\n  }\n};\n\nexports.disableGlobalBlurring = function (blurAllCells) {\n  if (!(instantiated === 1) && document && document.body) {\n    document.body.removeEventListener('mousedown', blurAll(blurAllCells));\n    instantiated = 0;\n    return blurAll(blurAllCells);\n  }\n\n  if (instantiated > 0) {\n    instantiated -= 1;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}