{"ast":null,"code":"\"use strict\";\n/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.source = {\n  beginDrag: function beginDrag(props) {\n    // Begin dragging the cell\n    props.dragCell(props.id);\n    return __assign({}, props, {\n      // we do not want to pass down the react children or we will risk circular dependencies.\n      children: null,\n      node: __assign({}, props.node, {\n        rows: props.rawNode().rows\n      })\n    });\n  },\n  endDrag: function endDrag(_a, monitor) {\n    var cancelCellDrag = _a.cancelCellDrag,\n        id = _a.id;\n\n    if (monitor.didDrop()) {\n      // If the item drop occurred deeper down the tree, don't do anything\n      return;\n    } // If drag ended but drop did not occur, cancel dragging\n\n\n    cancelCellDrag();\n  }\n};\n\nexports.collect = function (connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n    connectDragPreview: connect.dragPreview()\n  };\n};","map":null,"metadata":{},"sourceType":"script"}