{"ast":null,"code":"\"use strict\";\n/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar empty_1 = require(\"./empty\");\n\nexports.flatten = function (c, n) {\n  return c.concat(n);\n};\n\nexports.optimizeCells = function (cells) {\n  if (cells === void 0) {\n    cells = [];\n  }\n\n  return cells.filter(empty_1.emptyFilter);\n};\n\nexports.optimizeRows = function (rows) {\n  if (rows === void 0) {\n    rows = [];\n  }\n\n  return rows.filter(empty_1.emptyFilter);\n};\n\nexports.optimizeCell = function (_a) {\n  var rows = _a.rows,\n      other = __rest(_a, [\"rows\"]);\n\n  return __assign({}, other, {\n    rows: (rows || []).map(function (r) {\n      var _a = r.cells,\n          cells = _a === void 0 ? [] : _a;\n\n      if (cells.length !== 1) {\n        return [r];\n      }\n\n      var _b = cells[0],\n          _c = _b.rows,\n          cellRows = _c === void 0 ? [] : _c,\n          layout = _b.layout;\n\n      if (cellRows.length > 0 && !layout) {\n        return cellRows;\n      }\n\n      return [r];\n    }).reduce(exports.flatten, [])\n  });\n};\n\nexports.optimizeRow = function (_a) {\n  var cells = _a.cells,\n      other = __rest(_a, [\"cells\"]);\n\n  return __assign({}, other, {\n    cells: (cells || []).map(function (c) {\n      var _a = c.rows,\n          rows = _a === void 0 ? [] : _a;\n\n      if (rows.length !== 1 || c.layout) {\n        return [c];\n      }\n\n      var _b = rows[0].cells,\n          rowCells = _b === void 0 ? [] : _b;\n\n      if (rowCells.length === 1) {\n        return rowCells;\n      }\n\n      return [c];\n    }).reduce(exports.flatten, [])\n  });\n};","map":null,"metadata":{},"sourceType":"script"}