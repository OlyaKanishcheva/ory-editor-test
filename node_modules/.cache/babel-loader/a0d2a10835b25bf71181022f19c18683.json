{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = __importStar(require(\"react\"));\n\nvar Button_1 = __importDefault(require(\"@material-ui/core/Button\"));\n\nvar Popover_1 = __importDefault(require(\"@material-ui/core/Popover\"));\n\nvar Colorize_1 = __importDefault(require(\"@material-ui/icons/Colorize\"));\n\nvar react_color_1 = require(\"react-color\");\n\nvar ColorPicker =\n/** @class */\nfunction (_super) {\n  __extends(ColorPicker, _super);\n\n  function ColorPicker() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      isColorPickerVisible: false\n    };\n\n    _this.handleClickShowColorPicker = function (e) {\n      if (_this.props.onDialogOpen) {\n        _this.props.onDialogOpen();\n      }\n\n      _this.setState({\n        isColorPickerVisible: !_this.state.isColorPickerVisible\n      });\n    };\n\n    _this.onChange = function (e) {\n      return _this.props.onChange && _this.props.onChange(e.rgb);\n    };\n\n    _this.handleChangeComplete = function (e) {\n      return _this.props.onChangeComplete && _this.props.onChangeComplete(e.rgb);\n    };\n\n    return _this;\n  }\n\n  ColorPicker.prototype.render = function () {\n    var _this = this;\n\n    return React.createElement(React.Fragment, null, React.createElement(Button_1.default, {\n      buttonRef: function buttonRef(node) {\n        _this.anchorEl = node;\n      },\n      variant: \"contained\",\n      onClick: this.handleClickShowColorPicker,\n      style: __assign({}, this.props.style, {\n        borderColor: exports.colorToString(this.props.color),\n        borderStyle: 'solid',\n        borderWidth: '2px'\n      })\n    }, this.props.buttonContent, this.props.icon), React.createElement(Popover_1.default, {\n      className: \"ory-prevent-blur\",\n      open: this.state.isColorPickerVisible,\n      anchorEl: this.anchorEl,\n      onClose: this.handleClickShowColorPicker,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      }\n    }, React.createElement(\"div\", {\n      className: \"ory-prevent-blur\"\n    }, React.createElement(react_color_1.ChromePicker, {\n      color: this.props.color,\n      onChange: this.onChange,\n      onChangeComplete: this.handleChangeComplete\n    }))));\n  };\n\n  ColorPicker.defaultProps = {\n    buttonContent: 'Change color',\n    icon: React.createElement(Colorize_1.default, {\n      style: {\n        marginLeft: '4px',\n        fontSize: '19px'\n      }\n    })\n  };\n  return ColorPicker;\n}(React.Component);\n\nexports.colorToString = function (c) {\n  return c && 'rgba(' + c.r + ', ' + c.g + ', ' + c.b + ', ' + c.a + ')';\n};\n\nexports.default = ColorPicker;","map":null,"metadata":{},"sourceType":"script"}